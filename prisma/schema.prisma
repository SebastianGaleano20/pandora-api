generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  id          String         @id @default(uuid()) 
  productName String      @unique @map("product_name") @db.VarChar(80)
  price       Float
  isVegan     Boolean     @default(false) @map("is_vegan")
  image       String      @db.Text
  stock       Boolean     @db.Boolean
  description String      @db.Text
  createdAt   DateTime    @default(now()) @map("created_at")
  updateAt    DateTime    @updatedAt @map("update_at")
  purchase    Purchases[]
  categoryId  Int         @map("category_id")
  category    Categories  @relation(fields: [categoryId], references: [id])

  @@map("products")
}

model Categories {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  createdAt DateTime   @default(now()) @map("created_at")
  updateAt  DateTime   @updatedAt @map("update_at")
  product   Products[]

  @@map("categories")
}

model Users {
  id         Int         @id @default(autoincrement())
  firstName  String      @map("first_name") @db.VarChar(80)
  secondName String      @map("second_name") @db.VarChar(80)
  lastName   String      @map("last_name") @db.VarChar(80)
  email      String      @unique @db.VarChar(254)
  isAdmin    Boolean     @default(false) @map("is_admin")
  createdAt  DateTime    @default(now()) @map("created_at")
  updateAt   DateTime    @updatedAt @map("update_at")
  purchase   Purchases[]

  @@unique([firstName, secondName, lastName])
  @@map("users")
}

model Purchases {
  userId    Int      @map("user_id")
  productId String      @map("product_id")
  quantity  Int
  user      Users    @relation(fields: [userId], references: [id])
  product   Products @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")

  @@id([userId, productId])
  @@map("purchases")
}
