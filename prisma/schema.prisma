generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String         @id @default(uuid()) 
  productName String      @unique @map("product_name") @db.VarChar(80)
  price       Float
  isVegan     Boolean     @default(false) @map("is_vegan")
  image       String      @db.Text
  stock       Boolean     @db.Boolean
  description String      @db.Text
  createdAt   DateTime    @default(now()) @map("created_at")
  updateAt    DateTime    @updatedAt @map("update_at")
  purchase    Purchase[]
  categoryId  Int         @map("category_id")
  category    Category  @relation(fields: [categoryId], references: [id])

  @@map("product")
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  createdAt DateTime   @default(now()) @map("created_at")
  updateAt  DateTime   @updatedAt @map("update_at")
  product   Product[]

  @@map("category")
}

model User {
  id         Int         @id @default(autoincrement())
  firstName  String      @map("first_name") @db.VarChar(80)
  secondName String      @map("second_name") @db.VarChar(80)
  lastName   String      @map("last_name") @db.VarChar(80)
  email      String      @unique @db.VarChar(254)
  password   String
  role       Role      @default(USER)
  createdAt  DateTime    @default(now()) @map("created_at")
  updateAt   DateTime    @updatedAt @map("update_at")
  purchase   Purchase[]

  @@unique([firstName, secondName, lastName])
  @@map("user")
}

enum Role {
  USER
  ADMIN
}

model Purchase {
  userId    Int      @map("user_id")
  productId String      @map("product_id")
  quantity  Int
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")

  @@id([userId, productId])
  @@map("purchase")
}
